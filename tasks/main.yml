- name: Check that you can connect on octo-spy
  uri:
    url: "{{ octo_spy_host }}/info"

- name: Register deployment
  uri:
    url: "{{ octo_spy_host }}/deployments"
    url_username: "{{ octo_username }}"
    url_password: "{{ octo_password }}"
    force_basic_auth: yes
    method: POST
    body: "{{ lookup('template', './deployment.json.j2') }}"
    status_code: 201,400,404
    body_format: json
    return_content: yes
  register: result
  when: step == "start"

- name: Register project on octo-spy
  uri:
    url: "{{ octo_spy_host }}/projects"
    url_username: "{{ octo_username }}"
    url_password: "{{ octo_password }}"
    force_basic_auth: yes
    method: POST
    body: "{\"name\":\"{{ project_name }}\", \"isMaster\": true}"
    body_format: json
    status_code: 201
  when: step == "start" and (result.status == 404 or result.status == 400) and result.json.field == "project"

- name: Register deployment with new register project on octo-spy
  uri:
    url: "{{ octo_spy_host }}/deployments"
    url_username: "{{ octo_username }}"
    url_password: "{{ octo_password }}"
    force_basic_auth: yes
    method: POST
    body: "{{ lookup('template', './deployment.json.j2') }}"
    status_code: 201
    body_format: json
  when: step == "start" and (result.status == 404 or result.status == 400) and result.json.field == "project"

- name: Delete progress of deployment
  uri:
    url: "{{ octo_spy_host }}/deployments/progress?environment={{ project_environment | default('Development') }}&project={{ project_name }}&version={{ project_version }}&client={{ project_client | default('Internal') }}&alive=true"
    url_username: "{{ octo_username }}"
    url_password: "{{ octo_password }}"
    force_basic_auth: yes
    method: DELETE
    status_code: 204
  when: step == "end"

